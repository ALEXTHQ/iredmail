*** program/include/main.inc	Sat Apr  5 14:49:21 2008
--- program/include/main.inc	Tue Apr 29 01:01:59 2008
*************** function rcube_charset_convert($str, $fr
*** 1039,1046 ****
  function rep_specialchars_output($str, $enctype='', $mode='', $newlines=TRUE)
    {
    global $OUTPUT_TYPE, $OUTPUT;
!   static $html_encode_arr, $js_rep_table, $xml_rep_table;
! 
    if (!$enctype)
      $enctype = $GLOBALS['OUTPUT_TYPE'];
  
--- 1039,1053 ----
  function rep_specialchars_output($str, $enctype='', $mode='', $newlines=TRUE)
    {
    global $OUTPUT_TYPE, $OUTPUT;
!   static $html_encode_arr = false;
!   static $js_rep_table = false;
!   static $xml_rep_table = false;
! 
!   $charset = $OUTPUT->get_charset();
!   $is_iso_8859_1 = false;
!   if ($charset == 'ISO-8859-1') {
!     $is_iso_8859_1 = true;
!   }
    if (!$enctype)
      $enctype = $GLOBALS['OUTPUT_TYPE'];
  
*************** function rep_specialchars_output($str, $
*** 1081,1087 ****
      return rawurlencode($str);
  
    // if the replace tables for XML and JS are not yet defined
!   if (!$js_rep_table)
      {
      $js_rep_table = $xml_rep_table = array();
      $xml_rep_table['&'] = '&amp;';
--- 1088,1094 ----
      return rawurlencode($str);
  
    // if the replace tables for XML and JS are not yet defined
!   if ($js_rep_table===false)
      {
      $js_rep_table = $xml_rep_table = array();
      $xml_rep_table['&'] = '&amp;';
*************** function rep_specialchars_output($str, $
*** 1090,1096 ****
        {
        $xml_rep_table[Chr($c)] = "&#$c;";
        
!       if ($OUTPUT->get_charset()=='ISO-8859-1')
          $js_rep_table[Chr($c)] = sprintf("\\u%04x", $c);
        }
  
--- 1097,1103 ----
        {
        $xml_rep_table[Chr($c)] = "&#$c;";
        
!       if ($is_iso_8859_1)
          $js_rep_table[Chr($c)] = sprintf("\\u%04x", $c);
        }
  
*************** function rep_specialchars_output($str, $
*** 1104,1111 ****
    // encode for javascript use
    if ($enctype=='js')
      {
!     if ($OUTPUT->get_charset()!='UTF-8')
!       $str = rcube_charset_convert($str, RCMAIL_CHARSET, $OUTPUT->get_charset());
        
      return preg_replace(array("/\r?\n/", "/\r/"), array('\n', '\n'), addslashes(strtr($str, $js_rep_table)));
      }
--- 1111,1118 ----
    // encode for javascript use
    if ($enctype=='js')
      {
!     if ($charset!='UTF-8')
!       $str = rcube_charset_convert($str, RCMAIL_CHARSET,$charset);
        
      return preg_replace(array("/\r?\n/", "/\r/"), array('\n', '\n'), addslashes(strtr($str, $js_rep_table)));
      }
*** program/include/rcube_imap.inc	Sat Apr  5 14:49:21 2008
--- program/include/rcube_imap.inc	Tue Apr 29 01:46:01 2008
*************** class rcube_imap
*** 574,600 ****
        // retrieve headers from IMAP
        if ($this->get_capability('sort') && ($msg_index = iil_C_Sort($this->conn, $mailbox, $this->sort_field, $this->skip_deleted ? 'UNDELETED' : '')))
          {        
!         $msgs = $msg_index[$begin];
!         for ($i=$begin+1; $i < $end; $i++)
!           $msgs = $msgs.','.$msg_index[$i];
          }
        else
          {
          $msgs = sprintf("%d:%d", $begin+1, $end);
! 
!         $i = 0;
!         for ($msg_seqnum = $begin; $msg_seqnum <= $end; $msg_seqnum++)
!           $msg_index[$i++] = $msg_seqnum;
          }
  
!       // use this class for message sorting
!       $sorter = new rcube_header_sorter();
!       $sorter->set_sequence_numbers($msg_index);
  
        // fetch reuested headers from server
        $a_msg_headers = array();
        $deleted_count = $this->_fetch_headers($mailbox, $msgs, $a_msg_headers, $cache_key);
! 
        // delete cached messages with a higher index than $max+1
        // Changed $max to $max+1 to fix this bug : #1484295
        $this->clear_message_cache($cache_key, $max + 1);
--- 574,598 ----
        // retrieve headers from IMAP
        if ($this->get_capability('sort') && ($msg_index = iil_C_Sort($this->conn, $mailbox, $this->sort_field, $this->skip_deleted ? 'UNDELETED' : '')))
          {        
!         $mymsgidx = array_slice ($msg_index, $begin, $end-$begin, true);
!         $msgs = join(",", $mymsgidx);
!         $headers_sorted = true;
          }
        else
          {
          $msgs = sprintf("%d:%d", $begin+1, $end);
!         $msg_index = range($begin, $end);
          }
  
!       
  
        // fetch reuested headers from server
        $a_msg_headers = array();
        $deleted_count = $this->_fetch_headers($mailbox, $msgs, $a_msg_headers, $cache_key);
!       if ($this->sort_order == 'DESC' && $headers_sorted) {  
!         //since the sort order is not used in the iil_c_sort function we have to do it here
!         $a_msg_headers = array_reverse($a_msg_headers);
!       }
        // delete cached messages with a higher index than $max+1
        // Changed $max to $max+1 to fix this bug : #1484295
        $this->clear_message_cache($cache_key, $max + 1);
*************** class rcube_imap
*** 607,619 ****
  
  
      // return empty array if no messages found
! 	if (!is_array($a_msg_headers) || empty($a_msg_headers))
! 		return array();
! 
  
      // if not already sorted
      if (!$headers_sorted)
        {
        $sorter->sort_headers($a_msg_headers);
  
        if ($this->sort_order == 'DESC')
--- 604,619 ----
  
  
      // return empty array if no messages found
!     if (!is_array($a_msg_headers) || empty($a_msg_headers)) {
!       return array();
!     }
  
      // if not already sorted
      if (!$headers_sorted)
        {
+       // use this class for message sorting
+       $sorter = new rcube_header_sorter();
+       $sorter->set_sequence_numbers($msg_index);
        $sorter->sort_headers($a_msg_headers);
  
        if ($this->sort_order == 'DESC')
*************** class rcube_imap
*** 652,667 ****
     */
    function _list_header_set($mailbox, $msgs, $page=NULL, $sort_field=NULL, $sort_order=NULL)
      {
-     // also accept a comma-separated list of message ids
-     if (is_string($msgs))
-       $msgs = split(',', $msgs);
-       
      if (!strlen($mailbox) || empty($msgs))
        return array();
  
      $this->_set_sort_order($sort_field, $sort_order);
  
-     $max = count($msgs);
      $start_msg = ($this->list_page-1) * $this->page_size;
  
      // fetch reuested headers from server
--- 652,670 ----
     */
    function _list_header_set($mailbox, $msgs, $page=NULL, $sort_field=NULL, $sort_order=NULL)
      {
      if (!strlen($mailbox) || empty($msgs))
        return array();
  
+     // also accept a comma-separated list of message ids
+     if (is_array ($msgs)) {
+       $max = count ($msgs);
+       $msgs = join (',', $msgs);
+     } else {
+       $max = count(split(',', $msgs));
+     } 
+ 
      $this->_set_sort_order($sort_field, $sort_order);
  
      $start_msg = ($this->list_page-1) * $this->page_size;
  
      // fetch reuested headers from server
*** program/include/rcube_shared.inc	Sat Apr  5 14:49:21 2008
--- program/include/rcube_shared.inc	Tue Apr 29 01:28:03 2008
*************** function rcube_browser()
*** 92,98 ****
  function rcube_label($attrib)
  {
    global $sess_user_lang, $INSTALL_PATH, $OUTPUT;
!   static $sa_text_data, $s_language, $utf8_decode;
  
    // extract attributes
    if (is_string($attrib))
--- 92,99 ----
  function rcube_label($attrib)
  {
    global $sess_user_lang, $INSTALL_PATH, $OUTPUT;
!   static $sa_text_data = false;
!   static $s_language, $utf8_decode;
  
    // extract attributes
    if (is_string($attrib))
*************** function rcube_label($attrib)
*** 106,112 ****
  
  
    // load localized texts
!   if (!$sa_text_data || $s_language != $sess_user_lang)
      {
      $sa_text_data = array();
      
--- 107,113 ----
  
  
    // load localized texts
!   if ($sa_text_data===false || $s_language != $sess_user_lang)
      {
      $sa_text_data = array();
      
