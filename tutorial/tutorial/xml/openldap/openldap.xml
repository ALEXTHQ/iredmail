<chapter id="openldap"><?dbhtml filename="openldap.html"?>
    <title>OpenLDAP（已完成，等待校对）</title>

<!--Install OpenLDAP-->
<section id="openldap_installation"><?dbhtml filename="openldap_installation.html"?>
    <title>安装 OpenLDAP</title>
<para>
<programlisting>
# yum install openldap-clients openldap-servers
</programlisting>
</para>

<para>执行 chkconfig，使 OpenLDAP 在系统启动时自动启动：
<programlisting>
# chkconfig --level 35 ldap on
</programlisting>
</para>

</section>
<!-- END openldap installation -->




    <!--openldap configure-->
    <section id="openldap_configuration"><?dbhtml filename="openldap_configuration.html"?>
        <title>配置 OpenLDAP</title>



        <!-- iredmail.schema -->
        <section id="openldap_iredmail_schema"><?dbhtml filename="openldap_iredmail_schema.html"?>
            <title>iredmail.schema</title>

        <para>这里将使用 iRedMail 项目自己的 iredmail.schema 文件与 Postfix 的整合，iredmail.schema 是基于 qmail.schema 扩展得来。可以从以下地址获取 iredmail.schema 文件：
<programlisting>
http://iredmail.googlecode.com/svn/trunk/iRedMail/samples/iredmail.schema
</programlisting>
</para>

<para>
下载后将 iredmail.schema 复制到对应的目录：
<programlisting>
# cp iredmail.schema /etc/openldap/schema/
</programlisting>
</para>
</section>
<!-- END iredmail.schema -->




        <!-- slapd.conf -->
        <section id="openldap_slapd_conf"><?dbhtml filename="openldap_slapd_conf.html"?>
            <title>OpenLDAP 的主配置文件：/etc/openldap/slapd.conf</title>
<para>OpenLDAP 的主配置文件是 /etc/openldap/slapd.conf。在这里，我们需要添加和修改一些内容：
<programlisting><![CDATA[
#
# File: /etc/openldap/slapd.conf
#

include         /etc/openldap/schema/core.schema
include         /etc/openldap/schema/cosine.schema
include         /etc/openldap/schema/inetorgperson.schema
include         /etc/openldap/schema/nis.schema

#
# 这是为了与 Postfix 整合所需要的 schema
#

include         /etc/openldap/schema/iredmail.schema

pidfile         /var/run/openldap/slapd.pid
argsfile        /var/run/openldap/slapd.args

#
# 禁止匿名连接。
#

disallow    bind_anon

#
# Version of LDAP Protocol.
# OpenLDAP 默认只允许使用 LDAP 协议的第三版本（LDAPv3）。
# 如果需要强制使用 LDAPv3，则可以使用以下参数：
#
#require        LDAPv3
#
# 如果需要提供 LDAPv2 的支持，需要加入以下参数：
#
allow           bind_v2

#
# 日志级别，用于调试。过多的日志输出需要大量的 I/O 操作，可能会影响性能。
#
# -1 级别将产生最多的 debug 信息。
#loglevel   -1
#
# 0 级别除了记录 OpenLDAP 启动时的输出信息外，不记录任何信息。
#loglevel    0

loglevel        256

#
# Access control policy.
#
# 这里开始定义访问控制策略。

#
# ... skip many lines here ...
#

#
# database 关键字之前的参数都是全局参数。
# database 关键字开始的地方表示开始定义一个 LDAP Instance。
#

database       bdb

suffix          "dc=osspinc,dc=com"
rootdn          "cn=Manager,dc=osspinc,dc=com"
rootpw          passwd

#
# 设置 LDAP 数据存放的路径和目录的权限。
#
directory       /var/lib/ldap/osspinc.com/
mode            0700

#
# 为一些 LDAP 属性维护索引，可以加快查询速度。
#

index objectClass                       eq,pres
index ou,cn,mail,surname,givenname      eq,pres,sub
index uidNumber,gidNumber,loginShell    eq,pres
index uid,memberUid                     eq,pres,sub
index nisMapName,nisMapEntry            eq,pres,sub

#
# 这是需要用到的 iRedMail.schema 里的一些属性
#
index domainName,mtaTransport,domainStatus,domainMaxQuotaSize,domainMaxUserNumber   eq
index domainSenderBccAddress,domainRecipientBccAddress  eq
index homeDirectory,mailMessageStore,mailForwardingAddress,accountStatus eq
]]></programlisting>
</para>

<para>简单解释：
    <itemizedlist>
        <listitem><para>database：这是定义 OpenLDAP 使用哪种数据库作为 backend，用来存储数据。推荐使用 bdb (Berkeley Database)。</para></listitem>
        <listitem><para>suffix：这是定义 LDAP 树的前缀。</para></listitem>
        <listitem><para>rootdn：这是定义用来管理整个 LDAP 的管理员账号。</para></listitem>
        <listitem><para>rootpw：这是设定 rootdn 的密码。</para></listitem>
    </itemizedlist>
</para>

<tip><title>LDAP suffix</title>
    <para>OpenLDAP 支持多个 suffix，这可以通过定义多个 database 来指定。</para>
</tip>

<note><title>root password</title>
    <para>这里的 rootpw 使用的是明文密码。你也可以使用 slappasswd 生成的密码：
<programlisting>
# slappasswd
New password: 
Re-enter new password:
{SSHA}mHzQL7t4YG/a6g5mt2YPLE/+ErmekI34
</programlisting>

<para>默认是使用 SSHA 这个加密算法的。将得到的 '{SSHA}mHzQL7t4YG/a6g5mt2YPLE/+ErmekI34?' 这一串字符复制到 rootpw 后面就可以了。</para>
</para>

    <para>也可以用 -h 参数指定 slappasswd 使用其它的加密算法。比如：
<programlisting>
# slappasswd -h {MD5}
</programlisting>
</para>

</note>

<para>
<itemizedlist>
    <listitem><para>directory：这是定义 OpenLDAP 的数据都存放在哪个目录下。我们创建这些目录并设置正确的权限：
<programlisting>
# mkdir /var/lib/ldap/osspinc.com/
# chown -R ldap:ldap /var/lib/ldap/osspinc.com/
# chmod -R 700 /var/lib/ldap/osspinc.com/
</programlisting>
    </para></listitem>
</itemizedlist>
</para>

</section>
<!-- END slapd.conf -->





<!--openldap Log-->
<section id="openldap_log"><?dbhtml filename="openldap_log.html"?>
    <title>OpenLDAP 的日志</title>

    <para>OpenLDAP 默认将所有日志信息发送到 syslogd 的 'local4' 这个日志级别。为了便于调试分析，可以将所有日志单独存放在某个日志文件里，比如：/var/log/openldap.log。步骤如下：</para>

    <orderedlist>
        <listitem><para>修改 /etc/syslog.conf，增加一行：
<programlisting>
local4.*                    -/var/log/openldap.log
</programlisting>
</para></listitem>

<note>
    <para>这里在 '/var/log/openldap.log' 前加了一个横线，表示对日志的记录使用 异步模式（async），这样可以减少文件的 I/O 操作，一定程度上提高性能。</para>
</note>

<listitem><para>创建 /var/log/openldap.log 这个文件，并设置好权限：
<programlisting>
# touch /var/log/openldap.log
# chown ldap:ldap /var/log/openldap.log
# chmod 700 /var/log/openldap.log
</programlisting>
</para></listitem>

<listitem><para>为 OpenLDAP 的日志文件设置 logrotate。新建文件 /etc/logrotate.d/openldap，填入以下内容：
<programlisting>
#
# File: /etc/logrotate.d/openldap
#

/var/log/openldap.log {
    compress
    weekly
    rotate 5
    create 0600 ldap ldap
    missingok
    postrotate
           /sbin/killall -HUP syslogd
    endscript
}
</programlisting>
</para></listitem>

<listitem><para>重启 syslog 服务以使配置生效：
<programlisting>
# /etc/init.d/syslog restart
</programlisting>
</para></listitem>
</orderedlist>
</section>
    <!--end openldap log-->







    <!--openldap startup -->
    <section id="openldap_startup"><?dbhtml filename="openldap_startup.html"?>
        <title>启动 OpenLDAP</title>
<para>都配置好了，现在可以启动 OpenLDAP 了：
<programlisting>
# /etc/init.d/ldap restart
</programlisting>
</para>

<para>这时候在 /var/log/openldap.log 里应该已经有一些信息了，不妨现在查看一下：
<programlisting>
# cat /var/log/openldap.log
</programlisting>
</para>

<para>如果看到有类似的输出，则表示已经正常运行了：
<programlisting>
Feb 25 10:58:23 localhost slapd2449?: @(#) $OpenLDAP: slapd 2.3.27 (Jun 27 2007 08:48:26)$
brewbuilder@ls20-bc1-13.build.redhat.com:/builddir/build/BUILD/openldap-2.3.27/openldap-2.3.27/build-servers/servers/slapd Feb 25 10:58:23
localhost slapd2450?: slapd starting
</programlisting>
</para>

</section>
    <!-- END openldap startup -->











    <!-- openldap initialize -->
    <section id="openldap_initialize"><?dbhtml filename="openldap_initialize.html"?>
        <title>初始化 LDAP</title>





        <!-- openldap tree structure -->
        <section id="openldap_tree"><?dbhtml filename="openldap_tree.html"?>
            <title>LDAP 树结构</title>
            
            <para>这是我们规划好的 LDAP 树结构，请根据自己的需要进行调整：
<programlisting>
dc=osspinc,dc=com
          |- o=domains
                 |- domainName=iredmail.org
                       |- mail=postmaster@iredmail.org
                       |- mail=www@iredmail.org

                 |- domainName=osspinc.com
                       |- mail=postmaster@osspinc.com
                       |- mail=www@osspinc.com
</programlisting>
</para>

<note><title>dc=osspinc,dc=com</title>
<para>这是指定 LDAP 的根节点，名字可以任意取，但一般都以自己的域名来命名。 例如：osspinc.com，可以使用 'dc=osspinc,dc=com' 来做为根节点，而 'example.com.cn' 则习惯于使用 'dc=example,dc=com.cn' 作为根节点。</para>
</note>

<note><title>o=domains</title>
<para>为了不影响您其他需要用到 LDAP 的应用，这里使用单独的 o=domains 节点来保存所有虚拟域和虚拟用户的信息。</para>
</note>

<note><title>domainName=osspinc.com</title>
<para>这里 domainName 属性用于指定 Postfix 里需要用到的虚拟域的域名的。 这里指定了两个虚拟域，分别是：osspinc.com 和 iredmail.org。</para>
</note>

<note><title>postmaster</title>
<para>postmaster@osspinc.com 将是 o=osspinc.com 这个域的管理员，可以用于 添加、删除和修改本域内的用户。具体的权限控制会在下面的部分进行设置。</para>
</note>
</section>
        <!-- openldap tree structure -->





        <!-- openldap initialize base -->
        <section id="openldap_initialize_base"><?dbhtml filename="openldap_initialize_base.html"?>
            <title>初始化</title>

            <!-- openldap_tree_root_entry -->
            <section id="openldap_tree_root_entry"><?dbhtml filename="openldap_tree_root_entry"?>
                <title>dc=osspinc,dc=com</title>

<para>将以下代码保存为一个文件，例如 root.ldif。
<programlisting>
dn: dc=osspinc,dc=com
objectclass: dcObject
objectclass: organization
dc: osspinc
o: osspinc
</programlisting>
</para>

<caution>
<para>如果你的域名是 example.com.cn，应该稍加修改，成为以下的代码：
<programlisting>
dn: dc=example,dc=com.cn
objectclass: dcObject
objectclass: organization
dc: example     # 这里的值要和 dc=example 的值一致
o: example      # 这里的值要和 dc=example 的值一致
</programlisting>
</para>
</caution>

<para>请先确认 OpenLDAP 已经正在运行，再使用 OpenLDAP 提供的 ldapadd 工具将这个 root dn 添加进去，之后在 phpLDAPadmin 或 ldapsearch 里就能看到这个 dn 了：
<programlisting>
# ldapadd -x -D "cn=Manager,dc=osspinc,dc=com" -W -f root.ldif
Enter LDAP Password: 
adding new entry "dc=osspinc,dc=com"
</programlisting>
</para>

<para>简单解释：
    <itemizedlist>
        <listitem><para>-x：使用认证；</para></listitem>
        <listitem><para>-D：指定使用哪个 dn 来操作；</para></listitem>
        <listitem><para>-W：提示输入密码；</para></listitem>
        <listitem><para>-f：指定要添加的 entry 的内容从文件中读入；</para></listitem>
    </itemizedlist>
</para>

<para>用 ldapsearch 看看结果：
<programlisting>
# ldapsearch -x -D 'cn=Manager,dc=osspinc,dc=com' -b 'dc=osspinc,dc=com' -W

Enter LDAP Password: 
# extended LDIF
#
# LDAPv3
# base &lt;dc=osspinc,dc=com&gt; with scope subtree
# filter: (objectclass=*)
# requesting: ALL
#

# osspinc.com
dn: dc=osspinc,dc=com
objectClass: dcObject
objectClass: organization
dc: osspinc
o: osspinc

# search result
search: 2
result: 0 Success

# numResponses: 2
# numEntries: 1
# 
</programlisting>
</para>

看到刚才添加的 dn 了吧？
<caution><title>
简单解释：</title>
<para>
    * -b*：要查找哪个 dn 下的内容（base dn for search）； 
</para>
</caution>
<tip>更详细信息请参考：ldapadd(1)，ldapsearch(1) </tip>
</section>
            <!-- END openldap_tree_root_entry -->


            <!-- openldap_tree_domains_entry -->
            <section id="openldap_tree_domains_entry"><?dbhtml filename="openldap_tree_domains_entry"?>
                <title>o=domains,dc=osspinc,dc=com</title>

<para>将以下内容保存为 base_dn.ldif 文件后使用 ldapadd 添加：
<programlisting>
dn: o=domains,dc=osspinc,dc=com
objectClass: Organization
o: domains
</programlisting>
</para>

<para>Postfix 将从 o=domains,dc=osspinc,dc=com 开始查找邮件用户，这个 LDAP 节点通常称为 base dn。</para>
            </section>
            <!-- END openldap_tree_domains_entry -->


            <!-- openldap_tree_vmail_vmailadmin_entry -->
            <section id="openldap_tree_vmail_vmailadmin_entry"><?dbhtml filename="openldap_tree_vmail_vmailadmin_entry.html"?>
                <title>cn=vmail/vmailadmin,dc=osspinc,dc=com</title>

<para>cn=vmail,dc=osspinc,dc=com 这个帐号将用于 saslauthd/postfix 等程序连接 LDAP 查询用户信息。它对 o=domains,dc=osspinc,dc=com 下的所有内容都只有只读（Read） 的权限：
<programlisting>
dn: cn=vmail,dc=osspinc,dc=com
objectClass: person
objectClass: top
cn: vmail
sn: vmail
userPassword: vmailpasswd
</programlisting>
</para>

<para>cn=vmailadmin,dc=osspinc,dc=com 是提供给管理员管理所有的域和用户的帐号：
<programlisting>
dn: cn=vmailadmin,dc=osspinc,dc=com
objectClass: person
objectClass: top
cn: vmailadmin
sn: vmailadmin
userPassword: vmailpasswd
</programlisting>
</para>
</section>
            <!-- openldap_tree_vmail_vmailadmin_entry -->


            <!-- openldap_tree_domainX -->
            <section id="openldap_tree_domainX"><?dbhtml filename="openldap_tree_domainX.html"?>
                <title>domainName=iredmail.org,o=domains,dc=osspinc,dc=com</title>

<para>这是我们要添加一个虚拟域。将以下内容复制保存后，使用 ldapadd 添加：
<programlisting>
dn: domainName=iredmail.org,o=domains,dc=osspinc,dc=com
objectClass: mailDomain
domainName: iredmail.org
mtaTransport: dovecot
domainStatus: active
</programlisting>
</para>

<para>简单解释：
<itemizedlist>
    <listitem><para>这里的属性 domainName 指定的值将会被直接作为邮件地址的后缀，比如：@osspinc.com。</para></listitem>
    <listitem><para>mtaTransport 属性的值将作为类似 /etc/postfix/transport 文件的作用，提供给 Postfix 作为 transport。</para></listitem>
    <listitem><para>* domainStatus 属性的值将用于识别这个域的状态。如果不是 'active'，将被认为是当前被禁用的域。 </para></listitem>
</itemizedlist>
</para>
</section>
            <!-- END openldap_tree_domainX -->

            

            <!-- openldap_tree_postmaster -->
            <section id="openldap_tree_postmaster"><?dbhtml filename="openldap_tree_postmaster.html"?>
                <title>mail=postmaster@osspinc.com,domainName=osspinc.com,o=domains,dc=osspinc,dc=com</title>

<para>这是域管理员账号：
<programlisting>
dn: mail=postmaster@osspinc.com,domainName=osspinc.com,o=domains,dc=osspinc,dc=com
objectClass: inetOrgPerson
objectClass: mailUser
objectClass: top
cn: postmaster
sn: postmaster
uid: postmaster
mail: postmaster@osspinc.com
accountStatus: active
homeDirectory: /home/vmail
mailMessageStore: osspinc.com/postmaster/
mailQuota: 0
userPassword: 123456
</programlisting>
</para>

<para>简单解释：
    <itemizedlist>
        <listitem><para>这里已经设置了邮箱的路径，即 homeDirectory + mailMessageStore：
<programlisting>
/home/vmail/osspinc.com/www/
</programlisting>
</para></listitem>

        <listitem><para>这里直接给用户设置了一个明文密码：

<programlisting>
userPassword: 123456
</programlisting>
</para></listitem>
    </itemizedlist>
</para>

    <tip>
          <para>也可以使用 slappasswd 工具生成加密的密码：
              <programlisting>userPassword: {MD5}e41hj20lJ7j0XSksFgCEuw==</programlisting>
          </para>
    </tip>

    <itemizedlist>
        <listitem><para>mailQuota 里的 10240 表示的是 10M。</para></listitem>
    </itemizedlist>
</section>
            <!-- openldap_tree_postmaster -->



            <!-- openldap_tree_www -->
            <section id="openldap_tree_www"><?dbhtml filename="openldap_tree_www.html"?>
                <title>mail=www@osspinc.com,domainName=osspinc.com,o=domains,dc=osspinc,dc=com</title>

<para>以下 LDIF 文件的内容是将一个用户添加到 osspinc.com 中：
<programlisting>
dn: mail=www@osspinc.com,domainName=osspinc.com,o=domains,dc=osspinc,dc=com
objectClass: inetOrgPerson
objectClass: mailUser
objectClass: top
cn: www
sn: www
uid: www
mail: www@osspinc.com
accountStatus: active
homeDirectory: /home/vmail
mailMessageStore: osspinc.com/www/
mailQuota: 10240
userPassword: 123456
</programlisting>
</para>
</section>
            <!-- openldap_tree_www -->

</section>
    <!--end openldap base-->

</section>
        <!-- openldap initialize base -->







    <!--openldap acl-->
    <section id="openldap_acl"><?dbhtml filename="openldap_acl.html"?>
            <title>OpenLDAP 访问权限控制（ACL, Access Control List）</title>

<para>在使用 ldapadd 添加好各个 dn 之后，打开 /etc/openldap/slapd.conf 文件，在 'database bdb' 这一行之前添加以下内容，用于作访问控制。保存退出后需要重新启动 OpenLDAP 以使配置生效：
<programlisting>
#
# Part of file: /etc/openldap/slapd.conf
#

#
# Access Control List. Used for LDAP bind.
#

#
# Every domain have a administrator.
#   For domain: 'osspinc.com'
#   Administrator:
#       mail=postmaster@osspinc.com, domainName=osspinc.com, o=domains, dc=osspinc,dc=com
#

#
# Set permission for LDAP attrs.
#
access to attrs="userPassword,mailForwardingAddress"
    by anonymous    auth
    by self         write
    by dn.exact="cn=vmail,dc=osspinc,dc=com"   read
    by dn.exact="cn=vmailadmin,dc=osspinc,dc=com"  write
    by dn.regex="mail=postmaster@([^,]+),domainName=$1,o=domains, dc=osspinc,dc=com"   write
    by users        none

access to attrs="cn,sn"
    by anonymous    auth
    by self         write
    by dn.exact="cn=vmail,dc=osspinc,dc=com"   read
    by dn.exact="cn=vmailadmin,dc=osspinc,dc=com"  write
    by dn.regex="mail=postmaster@([^,]+),domainName=$1,o=domains, dc=osspinc,dc=com"   write
    by users        read

# Domain attributes.
access to attrs="objectclass,domainName,domainStatus,mtaTransport,domainSenderBccAddress,domainRecipientBccAddress"
    by anonymous    auth
    by self         read
    by dn.exact="cn=vmail,dc=osspinc,dc=com"   read
    by dn.exact="cn=vmailadmin,dc=osspinc,dc=com"  write
    by dn.regex="mail=postmaster@([^,]+),domainName=$1,o=domains, dc=osspinc,dc=com"    write
    by users        read

# User attributes.
access to attrs="mail,mailQuota,homeDirectory,mailMessageStore,mailForwardingAddress,accountStatus,userSenderBccAddress,userRecipientBccAddress"
    by anonymous    auth
    by self         read
    by dn.exact="cn=vmail,dc=osspinc,dc=com"   read
    by dn.exact="cn=vmailadmin,dc=osspinc,dc=com"  write
    by dn.regex="mail=postmaster@([^,]+),domainName=$1,o=domains, dc=osspinc,dc=com"    write
    by users        read

#
# Set ACL for vmail/vmailadmin.
#
access to dn="cn=vmail,dc=osspinc,dc=com"
    by anonymous                    auth
    by self                         write
    by dn.exact="cn=vmailadmin,dc=osspinc,dc=com"  write
    by users                        none

access to dn="cn=vmailadmin, dc=osspinc,dc=com"
    by anonymous                    auth
    by self                         write
    by users                        none

#
# Allow users to access their own domain subtree.
#
access to dn.regex="domainName=([^,]+), o=domains, dc=osspinc,dc=com$"
    by anonymous                    auth
    by self                         write
    by dn.exact="cn=vmail, dc=osspinc,dc=com"   read
    by dn.exact="cn=vmailadmin, dc=osspinc,dc=com"  write
    by dn.regex="mail=postmaster@$1,domainName=$1,o=domains, dc=osspinc,dc=com$" write
    by dn.regex="mail=[^,]+,domainName=$1,o=domains, dc=osspinc,dc=com$" read
    by users                        none
#
# Enable vmail/vmailadmin. 
#
access to dn.subtree="o=domains, dc=osspinc,dc=com"
    by anonymous                    auth
    by self                         write
    by dn.exact="cn=vmail, dc=osspinc,dc=com"   read
    by dn.exact="cn=vmailadmin, dc=osspinc,dc=com"  write
    by dn.regex="mail=postmaster@([^,]+),domainName=$1,o=domains, dc=osspinc,dc=com"    write
    by users                        read

#
# Set permission for "cn=*,dc=osspinc,dc=com".
#
access to dn.regex="cn=[^,]+,dc=osspinc,dc=com"
    by anonymous                    auth
    by self                         write
    by users                        none

#
# Set default permission.
#
access to *
    by anonymous                    auth
    by self                         write
    by users                        read
</programlisting>
</para>

<para>重新启动 OpenLDAP，以使配置生效：
<programlisting>
# /etc/init.d/ldap restart
</programlisting>
</para>

</section>
    <!--end openldap acl-->

    <!--openldap status-->
    <section id="openldap_db_status"><?dbhtml filename="openldap_db_status.html"?>
        <title>查看 OpenLDAP 数据库状态</title>

<para>可以通过 OpenLDAP 提供的 slapd_db_stat 工具来查看 LDAP 数据库的状态：
<programlisting>
# cd /var/lib/ldap/osspinc.com/
# slapd_db_stat -m
</programlisting>
</para>
</section>
    <!--end openldap status-->

</section>
</chapter>
