#!/bin/bash

# Author: Zhang Huangbin (michaelbibby <at> gmail.com)

export PROG_NAME='iRedMail'
export PROG_NAME_LOWERCASE='iredmail'
export PROG_VERSION='0.5.0-beta2'

# -----------------
# ---- Generic ----
# -----------------

# Maildir format: mbox, Maildir.
export MAILBOX_FORMAT='Maildir'

# Use exist Apache, MySQL, PHP: YES, NO.
# Note: You may need to change apache/php related config file path.
# Such as:
#   - MySQL server address and root user acount (conf/mysql).
#   - Path of apache/php config file path (conf/httpd).
export USE_EXIST_AMP='NO'

# Download packages from official yum repository or not, used in 'pkgs/get_all.sh'.
export DOWNLOAD_PKGS='YES'

# For distribute deployment.
export IMAP_SERVER='127.0.0.1'
export SMTP_SERVER='127.0.0.1'

# For POP3/IMAP services.
export USE_POP3='YES'
export USE_POP3S='YES'
export USE_IMAP='YES'
export USE_IMAPS='YES'

# For managesieve service and software.
export USE_MANAGESIEVE='YES'    # Use managesieve service.
export USE_PYSIEVED='YES'       # Use pysieved to provide managesieve service.

# vmail user. uid and gid should be export after user added. Reference:
# functions/user_vmail.sh
export VMAIL_USER_NAME='vmail'
export VMAIL_GROUP_NAME='vmail'
export VMAIL_ADMIN_USER_NAME="${VMAIL_USER_NAME}admin"

# Default virtual domain admin name without domain name (@example.com).
export DOMAIN_ADMIN_NAME='postmaster'

# Kernel name.
export KERNEL_NAME="$(uname -s)"

# Check distribution.
if [ X"${KERNEL_NAME}" == X"Linux" ]; then
    if [ -f /etc/redhat-release ]; then
        # RHEL/CentOS
        export DISTRO='RHEL'
    elif [ -f /etc/lsb-release ]; then
        # Ubuntu
        export DISTRO='UBUNTU'
        export DISTRO_CODENAME="$( grep 'DISTRIB_CODENAME' /etc/lsb-release | awk -F'=' '{print $2}' )"
    elif [ -f /etc/debian_version ]; then
        # Debian
        export DISTRO='DEBIAN'
    else
        # Not support yet.
        echo "Your distrobution is not supported yet."
        exit 255
    fi
else
    # Not support *BSD and other distrobutions yet.
    echo "Error: Your OS is not supported yet."
    exit 255
fi

# Hostname.
export HOSTNAME="$(hostname --fqdn)"

# ----------------------------------
# You do *NOT* need to modify them.
# ----------------------------------
export DATE="$(/bin/date +%Y.%m.%d.%H.%M.%S)"

# Tools.
export CONFIG_VIA_DIALOG="${DIALOG_DIR}/config_via_dialog.sh"
# Note: config file will be sourced in file 'conf/functions', function 'check_env()'.
export CONFIG_FILE="${ROOTDIR}/config"
export TIP_FILE="${ROOTDIR}/${PROG_NAME}.tips"
export STATUS_FILE="${ROOTDIR}/.${PROG_NAME}.installation.status"

# Output flag.
export INFO_FLAG="< INFO >"
export ERROR_FLAG="< ERROR >"
export QUESTION_FLAG="< Question >"
export BACKUP_FLAG="< Backup >"

export CONF_MSG="#
# File generated by ${PROG_NAME} (${DATE}) which stands for:
# Mail Server Solution for Red Hat(R) Enterprise Linux series.
#
# Version:  ${PROG_VERSION}
# Project:  http://code.google.com/p/iredmail/
#
# If you deploy ${PROG_VERSION} in product environment, we suggest
# you public your information in 'Success Stories' page to help us
# generalization ${PROG_VERSION}, and you can join iredmailsupport@
# mail list for further technique support, such as bug/issue fix,
# event response, software update, etc.
#
# Success Stories:
#   http://www.iredmail.org/wiki/index.php?title=IRedMail_Success_Stories
#
# Forum: http://www.iredmail.org/forum/
#
"

# For perl and run-time locale setting.
export LC_ALL=C

# TERM.
if [ X"${TERM}" == X"xterm" -o X"${TERM}" == X"linux" ]; then
    export TERM='xterm'
else
    export TERM='pcconsole'
fi

# Logrotate configuration directory.
export LOGROTATE_DIR='/etc/logrotate.d'

# Genrate a random string.
# Usage:
#   str="$(${RANDOM_STRING})"
export RANDOM_STRING='eval </dev/urandom tr -dc A-Za-z0-9| (head -c $1 > /dev/null 2>&1 || head -c 30)'

# Check hardware architecture.
arch="$(uname -m)"
case $arch in
    i[3456]86) export ARCH='i386' ;;
    x86_64) export ARCH='x86_64' ;;
    *)
        echo "Your architecture is not supported yet: ${arch}."
        echo "Both i386 and x86_64 are supported by ${PROG_NAME}."
        exit 255
        ;;
esac

# install_pkg: function used to install packages without confirm.
# remove_pkg: function used to remove packages without confirm.
# LIST_ALL_PKGS: command used to list all installed packages.
# LIST_FILES_IN_PKG: command used to list files installed by special package.
# enable_service: function (defined in conf/functions) used to enable services.
# disable_service: function (defined in conf/functions) used to disable services.
if [ X"${DISTRO}" == X"RHEL" ]; then
    # RHEL/CentOS.
    # System user: root. Note: not all OSes have group 'root'.
    export SYS_ROOT_USER='root'
    export SYS_ROOT_GROUP='root'

    # Package management.
    export install_pkg='install_pkg_rhel'
    export remove_pkg="remove_pkg_rhel"
    export LIST_ALL_PKGS='rpm -qa'
    export LIST_FILES_IN_PKG='rpm -ql'

    # Service control.
    export enable_service='enable_service_rh'
    export disable_service='disable_service_rh'

    # Syslog config file: syslog.
    export SYSLOG_CONF='/etc/syslog.conf'
    export SYSLOG_POSTROTATE_CMD='/bin/kill -HUP $(cat /var/run/syslogd.pid 2> /dev/null) 2> /dev/null || true'

    # Crontab related.
    export CRON_SPOOL_DIR="/var/spool/cron"

    # Directory /etc/sysconfig/ on RHEL/CentOS.
    export ETC_SYSCONFIG_DIR='/etc/sysconfig'
    # Iptables rule file.
    export IPTABLES_CONFIG="${ETC_SYSCONFIG_DIR}/iptables"

    # Directory used to store SSL/TLS key/cert file.
    export SSL_FILE_DIR="/etc/pki/tls"

    # Yum repository related.
    export YUM_REPOS_DIR='/etc/yum.repos.d'
    export LOCAL_REPO_NAME="${PROG_NAME}"
    export LOCAL_REPO_FILE="${YUM_REPOS_DIR}/${LOCAL_REPO_NAME}.repo"
    export YUM_UPDATE_REPO='http://www.iredmail.org/yum/rpms/5/'

    # command: dialog.
    export BIN_DIALOG="dialog"
    export PKG_DIALOG="dialog.${ARCH}"

elif [ X"${DISTRO}" == X"DEBIAN" -o X"${DISTRO}" == X"UBUNTU" ]; then
    # Ubuntu & Debian.
    export DEBIAN_FRONTEND='noninteractive'

    # System user: root. Note: not all OSes have group 'root'.
    export SYS_ROOT_USER='root'
    export SYS_ROOT_GROUP='root'

    # Package management.
    export install_pkg='install_pkg_debian'
    export remove_pkg='removel_pkg_debian'
    export LIST_ALL_PKGS="dpkg -l |awk '{print $2}'"
    export LIST_FILES_IN_PKG='dpkg -L'

    # Service control.
    export enable_service="enable_service_debian"
    export disable_service="disable_service_debian"

    # Syslog config: rsyslog.
    if [ X"${DISTRO}" == X"UBUNTU" -a X"${DISTRO_CODENAME}" == X"jaunty" ]; then
        # Ubuntu (Jaunty, 9.04) use /etc/syslog.conf.
        export SYSLOG_CONF='/etc/syslog.conf'
        export SYSLOG_POSTROTATE_CMD='invoke-rc.d sysklogd reload > /dev/null'
    else
        export SYSLOG_CONF='/etc/rsyslog.conf'
        export SYSLOG_POSTROTATE_CMD='invoke-rc.d rsyslog reload > /dev/null'
    fi

    # Crontab related.
    export CRON_SPOOL_DIR="/var/spool/cron/crontabs"

    # Directory /etc/default/ on Debian/Ubuntu.
    export ETC_SYSCONFIG_DIR='/etc/default'
    # Iptables rule file.
    export IPTABLES_CONFIG="${ETC_SYSCONFIG_DIR}/iptables"

    # Directory used to store SSL/TLS key/cert file.
    export SSL_FILE_DIR="/etc/ssl"


    # command: dialog.
    export BIN_DIALOG="dialog"
    export PKG_DIALOG="dialog"
else
    # Not support yet.
    echo "Your distrobution is not supported yet."
    exit 255
fi

export SSL_CERT_FILE="${SSL_FILE_DIR}/certs/iRedMail_CA.pem"
export SSL_KEY_FILE="${SSL_FILE_DIR}/private/iRedMail.key"
export TLS_COUNTRY='CN'
export TLS_STATE='GuangDong'
export TLS_CITY='ShenZhen'
export TLS_COMPANY="${HOSTNAME}"
export TLS_DEPARTMENT='IT'
export TLS_HOSTNAME="${HOSTNAME}"
export TLS_ADMIN="root@${HOSTNAME}"
